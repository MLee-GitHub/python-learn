* 基础部分
  numpy的主要对象是一个同类元素的多维数组. 这是一个所有元素均为同种类型，并通过正整数元组来进行索引的元素(一般为数字)表. 在numpy中维度(dimensions)称之为轴(axes). 数目称之为秩(rank).
  就比如，在3D空间中一个点的坐标[1, 2, 1]就是一个秩为1的数组，因为它仅有一个轴, 并且其长度为3. 又比如在下面的例子中，数组的秩为2(有两个维度)，第一个维度(轴)的长度为2，第二个维度(轴)的长度为3.
  [[1., 0., 0.],
   [0., 1., 2.]]
   numpy的数组类被称之为ndarray, 我们也将它叫做array. 需要注意的是，numpy.array与python标准库中的array.array是有区别的，后者仅处理一维数组并且只提供了少量的功能. 对于ndarray对象而言，比较重要的属性有：
   ndarray.ndim
      数组中轴(维度)的个数，在python的世界里，维度的个数是指秩
   ndarray.shape
      数组的维度. 这是一个表示数组在每一个维度上的大小的一个整数元组. 对于一个n行m列的矩阵而言，它的shape属性就为(n, m). 那么，这个元组的长度就必然为秩，或者为维度的个数，或为ndim属性
   ndarray.size
      数组中元素的总个数. 也就等于shape属性元组中各个元素的乘积.
   ndarray.dtype
      一个用来描述数组中元素类型的对象. 你能通过标准的python类型来创建或者直接指定dtype属性. 另外numpy也提供了它自己的数据类型. 例如，numpy.int32, numpy.int16, 以及numpy.float64, 等等.
   ndarray.itemsize
      数组中元素的字节大小(bytes). 例如，一个类型为float64的数组元素的itemsize为8(=64/8), 而一个类型为complex32的数组元素的itemsize为4(=32/8). 这个属性等价于ndarray.dtype.itemsize
   ndarray.data
      包含了实际数组元素的缓冲区. 通常我们不需要用这个属性，原因是，我们会用索引(功能)访问数组中元素.
